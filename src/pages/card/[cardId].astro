---
import Footer from "../../components/Footer.astro";
import SearchLayout from "../../layouts/SearchLayout.astro";
import { SingleCardPage } from "../../components/SingleCardPage";
import {
  isCardMetadataWithVotes,
  type CardMetadataWithVotes,
  type SingleCardDTO,
} from "../../../utils/apiTypes";

const { cardId } = Astro.params;

let title = "Arguflow Vault";
const apiHost = import.meta.env.API_HOST as string;
let specificCards: SingleCardDTO;

try {
  const specificCard = await fetch(`${apiHost}/card/${cardId ?? ""}`, {
    method: "GET",
  });
  const specificCardJson = (await specificCard.json()) as unknown;

  if (!isCardMetadataWithVotes(specificCardJson)) {
    throw new Error("Invalid card metadata");
  }

  specificCards = { metadata: specificCardJson, status: specificCard.status };

  title = `${specificCards.metadata.content
    .split(" ")
    .slice(0, 5)
    .join(" ")} | Arguflow Vault`;
} catch (e) {
  specificCards = { metadata: null, status: 404 };
  title = "Arguflow Vault";
}
---

<SearchLayout title={title}>
  <SingleCardPage
    cardId={cardId}
    defaultResultCard={specificCards as {
      metadata: CardMetadataWithVotes;
      status: number;
    }}
    client:load
  />
  <div class="flex-1"></div>
  <Footer />
</SearchLayout>
